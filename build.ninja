include build.conf

cflags   = -fPIC -std=gnu99 -Wall $CFLAGS
cppflags = $CPPFLAGS
ldflags  = -fPIC -Wl,-E -Wl,--as-needed $LDFLAGS

rule urlfetch
  command = wget -qO ${out} ${url}
  description = urlfetch ${url}

rule untargz
  command = tar -xzf ${in} -C ${obj}
  description = untargz ${in}

rule staticlib
  command = ar cru ${out} ${in}
  description = Ar ${out}

rule cc
  deps = gcc
  depfile = $out.d
  command = $cc $cflags $cppflags -c -o $out -MMD -MF $out.d $in
  description = Compile $out

rule ld
  command = $cc $ldflags -o $out $in $libs
  description = Link $out


include lua-${lua_build}.ninja
include libdwarf-${libdwarf_build}.ninja

build ${obj}/eris-util.o : cc eris-util.c
build ${obj}/eris-trace.o : cc eris-trace.c
build ${obj}/eris-typing.o : cc eris-typing.c
build ${obj}/eris-module.o : cc eris-module.c

build ${obj}/testutil-module.o : cc testutil-module.c
build ${obj}/testutil.so : ld ${obj}/testutil-module.o | ${lua_exe}
  ldflags = ${ldflags} -shared -Wl,--no-allow-shlib-undefined

build ${obj}/libtest.o  : cc libtest.c
build ${obj}/libtest.so : ld ${obj}/libtest.o
  ldflags = ${ldflags} -shared


build all : phony $
${obj}/libtest.so $
${obj}/testutil.so $
${obj}/eris.so

default all
